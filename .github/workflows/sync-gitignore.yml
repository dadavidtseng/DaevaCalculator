name: Sync .gitignore from ConfigCommon

on:
  # 手動觸發
  workflow_dispatch:
    inputs:
      template_name:
        description: 'Template name (e.g., unreal-engine.gitignore)'
        required: true
        default: 'unreal-engine.gitignore'
  
  # 每週檢查一次更新（可選）
  schedule:
    - cron: '0 2 * * 1'  # 每週一凌晨 2 點
  
  # 當 ConfigCommon 有更新時觸發（需要 webhook）
  repository_dispatch:
    types: [config-updated]

jobs:
  sync-gitignore:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Download .gitignore template
        run: |
          TEMPLATE_NAME="${{ github.event.inputs.template_name || 'unreal-engine.gitignore' }}"
          echo "Downloading template: $TEMPLATE_NAME"
          
          # 下載指定的 .gitignore 範本
          curl -fsSL \
            "https://raw.githubusercontent.com/dadavidtseng/ConfigCommon/main/$TEMPLATE_NAME" \
            -o .gitignore.new
          
          # 檢查檔案是否成功下載
          if [ ! -s .gitignore.new ]; then
            echo "Error: Failed to download $TEMPLATE_NAME"
            exit 1
          fi
          
          echo "Successfully downloaded $TEMPLATE_NAME"
      
      - name: Check for changes
        id: check_changes
        run: |
          if [ -f .gitignore ]; then
            if diff -q .gitignore .gitignore.new > /dev/null; then
              echo "No changes detected"
              echo "has_changes=false" >> $GITHUB_OUTPUT
            else
              echo "Changes detected"
              echo "has_changes=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "No existing .gitignore, creating new one"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Update .gitignore
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          mv .gitignore.new .gitignore
          echo "Updated .gitignore"
      
      - name: Clean up temporary files
        run: |
          rm -f .gitignore.new
      
      - name: Create Pull Request
        if: steps.check_changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update .gitignore from ConfigCommon template'
          title: 'chore: Update .gitignore template'
          body: |
            自動更新 .gitignore 範本檔案
            
            - 來源：[ConfigCommon](https://github.com/dadavidtseng/ConfigCommon)
            - 範本：`${{ github.event.inputs.template_name || 'unreal-engine.gitignore' }}`
            - 觸發方式：${{ github.event_name }}
            
            請檢查變更內容是否正確。
          branch: update-gitignore
          delete-branch: true
      
      - name: Auto-merge (optional)
        if: steps.check_changes.outputs.has_changes == 'true' && github.event_name == 'schedule'
        run: |
          echo "Auto-merge can be implemented here if needed"
          # gh pr merge --auto --squash
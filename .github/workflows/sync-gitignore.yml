name: Sync Config Files from ConfigCommon

permissions:
  contents: write

on:
  workflow_dispatch:
  
  schedule:
    # 每週一凌晨 2 點執行
    - cron: '0 2 * * 1'

jobs:
  sync-files:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Sync files
        id: sync
        run: |
          # 定義要同步的檔案清單和對應的來源檔案
          declare -A FILES_MAP=(
            [".gitignore"]="unreal-engine.gitignore"
            [".gitattribute"]="unreal-engine.gitattribute"
#            [".editorconfig"]=".editorconfig"
#            [".gitattributes"]=".gitattributes"
#            [".clang-format"]=".clang-format"
            # 在這裡加入更多檔案
          )
          
          CHANGED_FILES=""
          BASE_URL="https://raw.githubusercontent.com/dadavidtseng/ConfigCommon/main"
          
          for TARGET_FILE in "${!FILES_MAP[@]}"; do
            SOURCE_FILE="${FILES_MAP[$TARGET_FILE]}"
            echo "正在同步 $TARGET_FILE (來源: $SOURCE_FILE)"
            
            # 下載檔案
            if curl -fsSL "$BASE_URL/$SOURCE_FILE" -o "${TARGET_FILE}.temp" 2>/dev/null; then
              if [ -s "${TARGET_FILE}.temp" ]; then
                # 檢查是否有變更
                if [ -f "$TARGET_FILE" ]; then
                  if ! cmp -s "$TARGET_FILE" "${TARGET_FILE}.temp"; then
                    mv "${TARGET_FILE}.temp" "$TARGET_FILE"
                    CHANGED_FILES="${CHANGED_FILES}${TARGET_FILE} "
                    echo "✅ $TARGET_FILE 已更新"
                  else
                    rm -f "${TARGET_FILE}.temp"
                    echo "ℹ️ $TARGET_FILE 沒有變更"
                  fi
                else
                  mv "${TARGET_FILE}.temp" "$TARGET_FILE"
                  CHANGED_FILES="${CHANGED_FILES}${TARGET_FILE} "
                  echo "✅ $TARGET_FILE 已建立"
                fi
              else
                echo "⚠️ 下載的檔案是空的: $SOURCE_FILE"
                rm -f "${TARGET_FILE}.temp"
              fi
            else
              echo "❌ 無法下載: $SOURCE_FILE"
            fi
          done
          
          # 清理暫存檔案
          rm -f *.temp 2>/dev/null || true
          
          if [ -n "$CHANGED_FILES" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "changed_files=$CHANGED_FILES" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit and push
        if: steps.sync.outputs.changed == 'true'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add .
          git commit -m "chore: sync config files from ConfigCommon
          
          Updated: ${{ steps.sync.outputs.changed_files }}"
          git push
      
      - name: Summary
        run: |
          echo "## 同步結果" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.sync.outputs.changed }}" = "true" ]; then
            echo "已更新: ${{ steps.sync.outputs.changed_files }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "所有檔案都是最新的" >> $GITHUB_STEP_SUMMARY
          fi
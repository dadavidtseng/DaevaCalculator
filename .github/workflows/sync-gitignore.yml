name: Sync .gitignore from ConfigCommon

permissions:
  contents: write
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      template_name:
        description: 'Template name (e.g., unreal-engine.gitignore)'
        required: true
        default: 'unreal-engine.gitignore'
  
  schedule:
    - cron: '0 2 * * 1'

jobs:
  sync-gitignore:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set template name
        run: |
          TEMPLATE_NAME="${{ github.event.inputs.template_name || 'unreal-engine.gitignore' }}"
          echo "TEMPLATE_NAME=$TEMPLATE_NAME" >> $GITHUB_ENV
          echo "Using template: $TEMPLATE_NAME"
      
      - name: Download .gitignore template
        run: |
          echo "Downloading template: $TEMPLATE_NAME"
          
          # 建立 URL
          URL="https://raw.githubusercontent.com/dadavidtseng/ConfigCommon/main/$TEMPLATE_NAME"
          echo "URL: $URL"
          
          # 下載檔案並檢查狀態碼
          HTTP_CODE=$(curl -w "%{http_code}" -fsSL "$URL" -o .gitignore.new)
          
          if [ "$HTTP_CODE" != "200" ]; then
            echo "Error: HTTP $HTTP_CODE when downloading $TEMPLATE_NAME"
            echo "URL: $URL"
            exit 1
          fi
          
          # 檢查檔案是否存在且不為空
          if [ ! -s .gitignore.new ]; then
            echo "Error: Downloaded file is empty or doesn't exist"
            exit 1
          fi
          
          echo "Successfully downloaded $TEMPLATE_NAME ($(wc -l < .gitignore.new) lines)"
          echo "First few lines:"
          head -5 .gitignore.new
      
      - name: Check for changes
        id: check_changes
        run: |
          if [ -f .gitignore ]; then
            if cmp -s .gitignore .gitignore.new; then
              echo "No changes detected"
              echo "has_changes=false" >> $GITHUB_OUTPUT
            else
              echo "Changes detected"
              echo "has_changes=true" >> $GITHUB_OUTPUT
              echo "Differences:"
              diff .gitignore .gitignore.new || true
            fi
          else
            echo "No existing .gitignore, creating new one"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Update .gitignore
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          mv .gitignore.new .gitignore
          echo "Updated .gitignore"
          echo "Final file size: $(wc -l < .gitignore) lines"
      
      - name: Clean up temporary files
        run: |
          rm -f .gitignore.new
      
      - name: Commit and push changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add .gitignore
          git commit -m "chore: update .gitignore from ConfigCommon template

Source: https://github.com/dadavidtseng/ConfigCommon/blob/main/$TEMPLATE_NAME
Updated: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
Triggered by: ${{ github.event_name }}"
          
          git push
      
      - name: Summary
        run: |
          if [ "${{ steps.check_changes.outputs.has_changes }}" == "true" ]; then
            echo "✅ .gitignore updated successfully"
          else
            echo "ℹ️ No changes needed - .gitignore is already up to date"
          fi